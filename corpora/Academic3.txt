Abstract Based on the concept of DNA strand displacement and DNA strand algebra we have developed a method for logical inference which is not based on silicon based computing. Essentially, it is a paradigm shift from silicon to carbon. In this paper we have considered the inference mechanism, viz. modus ponens, to draw conclusion from any observed fact. Thus, the present approach to logical inference based on DNA strand algebra is basically an attempt to develop expert system design in the domain of DNA computing. We have illustrated our methodology with respect to worked out example. Our methodology is very flexible for implementation of different expert system applications. Keywords: logical inference, DNA strand algebra; DNA gate; DNA signal; process algebra; DNA computing; modus ponens; strand displacement; molecular computing; expert system approach. 1. Introduction Conventional silicon based computing has been successful over the past several decades. It is fast, flexible, and well understood. But it has reached its limitations of design complexity, processing power, memory, energy consumption, density and heat dissipation. Alternatives to these traditional methods of building computers have been proposed and in recent past molecular computing has gained considerable attention for non-silicon based computing which can overcome conventional computation problems. The Watson-Crick base pairing makes DNA a powerful tool for engineering at nano-scale [Adleman, 1994; Benenson et al., 2001; Green et al., 2006; Winfree et al., 1998]. The behaviour of DNA molecules can be predicted, and by setting 2 up strands of DNA in the right way, they can draw conclusion from a set of logical inference rules [Ray and Mondal, 2011a; Ray and Mondal, 2011b]. In this paper we have performed logical reasoning by modus ponens using DNA strand algebra, which can be defined as a branch of process algebra. The operations of DNA strands in present model are based on the mechanism of DNA strand displacement. Process algebras are widely used for defining the formal semantics of concurrent communicating processes. Process calculi provide a tool for the high-level description of interactions, communications, and synchronizations between a collection of independent agents or processes. They also provide algebraic laws that allow process descriptions to be manipulated and analyzed, and permit formal reasoning about equivalences between processes. The main components of DNA strand algebra are DNA strands, DNA gates, and their interactions. 2. DNA strand algebra: syntax and semantics Before going in detail description of DNA strand algebra we first have to know what is syntax and semantics. How are they different? [Cardelli, 2009; Cardelli 2013] A language is a set of valid sentences. The validity of language can be broken down into two things: syntax and semantics. The term syntax refers to grammatical structure of a language, rather than what they refer to or mean. Whereas the term semantics is concerned to the meaning of the vocabulary symbols arranged with that structure, often in relation to their truth and falsehood. Grammatical (syntactically) valid does not imply sensible (semantically) valid. In mathematics, computer science and linguistics, a formal language is a set of strings of symbols that may be constrained by rules that are specific to it. In computer science, the process algebras [Baeten, 2004] are mathematically rigorous languages with well defined semantics that permit describing and verifying properties of concurrent communicating systems. Process calculi provide a tool for the high-level description of interactions, communications, and synchronizations between a collection of independent agents or processes. They also provide algebraic laws that allow process descriptions to be manipulated and analyzed, and permit formal reasoning about equivalences between processes. The chemistry of diluted well-mixed solutions where floating molecules can interact according to the reaction rules can be presented as process algebra [Berry et al., 1989]. Thus two binary relations can be defined on a set of chemical process algebra viz. mixing and reaction. Let, P, Q and R are three chemical solutions in a set A. Mixing (P ≡ Q) is an equivalence relation which syntactically brings the floating molecules close to each other so that they can interact. Reaction (P → Q) describes how a solution becomes a different solution. The symmetric and transitive closure, →* represents sequences of reactions. The chemical process algebra obeys the following general laws;Untitled document